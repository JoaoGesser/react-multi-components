{"ast":null,"code":"var _jsxFileName = \"H:\\\\Developer\\\\Projects\\\\React\\\\testando\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport NavBar from './components/navbar';\nimport Counters from './components/counters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n      counters[index].value++;\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Counters, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["H:/Developer/Projects/React/testando/src/App.js"],"names":["React","Component","NavBar","Counters","App","state","counters","id","value","handleIncrement","counter","index","indexOf","setState","handleReset","map","c","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBI,KADwB,GAChB;AACJC,MAAAA,QAAQ,EAAE,CACN;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OADM,EAEN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAFM,EAGN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAHM,EAIN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAJM;AADN,KADgB;;AAAA,SAWvBC,eAXuB,GAWLC,OAAO,IAAI;AAC1B,YAAMJ,QAAQ,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAjB;AACA,YAAMK,KAAK,GAAGL,QAAQ,CAACM,OAAT,CAAiBF,OAAjB,CAAd;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,GAAkB,EAAC,GAAGD;AAAJ,OAAlB;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,CAAgBH,KAAhB;AACA,WAAKK,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd;AACF,KAjBsB;;AAAA,SAoBvBQ,WApBuB,GAoBT,MAAM;AAChB,YAAMR,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwBC,CAAC,IAAI;AAC1CA,QAAAA,CAAC,CAACR,KAAF,GAAU,CAAV;AACA,eAAOQ,CAAP;AACH,OAHgB,CAAjB;AAIA,WAAKH,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd;AAEH,KA3BsB;AAAA;;AA6BxBW,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,+BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAtCuB;;AAyC5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport NavBar from './components/navbar';\r\nimport Counters from './components/counters';\r\n\r\nclass App extends Component {\r\n    state = { \r\n        counters: [\r\n            {id: 1, value: 4},\r\n            {id: 2, value: 0},\r\n            {id: 3, value: 0},\r\n            {id: 4, value: 0},\r\n\r\n        ]\r\n     } \r\n\r\n     handleIncrement = counter => {\r\n        const counters = [...this.state.counters];\r\n        const index = counters.indexOf(counter);\r\n        counters[index] = {...counter};\r\n        counters[index].value++;\r\n        this.setState({counters});\r\n     }\r\n\r\n\r\n     handleReset = () => {\r\n         const counters = this.state.counters.map(c => {\r\n             c.value = 0;\r\n             return c;\r\n         });\r\n         this.setState({counters});\r\n         \r\n     } \r\n \r\n    render() { \r\n        return (\r\n            <React.Fragment>\r\n                <NavBar />\r\n                <main className=\"container\">\r\n                    <Counters />\r\n                </main>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default App;"]},"metadata":{},"sourceType":"module"}